
@mixin flex {
  display: flex;
}

@mixin justify-center {
  justify-content: center;
}

@mixin justify-between {
  justify-content: space-between;
}

@mixin justify-start {
  justify-content: flex-start;
}

@mixin justify-end {
  justify-content: flex-end;
}

@mixin align-center {
  align-items: center;
}

@mixin align-start {
  align-items: start;
}

@mixin align-end {
  align-items: end;
}

@mixin fontChar($fontColor, $fontSize, $fontWeight) {
  color: $fontColor;
  font-size: $fontSize;
  font-weight: $fontWeight;
}


$maxWidth:1440;
$maxWidthContainer: 1180;


@mixin adaptive-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.6;
  @media (max-width:767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth}));
  }
  @media (min-width:767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
  }
}


$maxWidthRem: 90;
$maxWidthContainerRem: 73;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type == 1 {
    #{$property}: calc(#{$minSize + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidthRem - 20}));
  }
}

@mixin transition {
  transition: all .4s ease;
}

@mixin break-1180 {
  @media (max-width: 1180px) {
    @content;
  }
}

@mixin break-992 {
  @media (max-width: 992px) {
    @content;
  }
}

@mixin break-870 {
  @media (max-width: 870px) {
    @content;
  }
}

@mixin break-991 {
  @media (max-width: 991px) {
    @content;
  }
}

@mixin break-768 {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin break-650 {
  @media (max-width: 650px) {
    @content;
  }
}

@mixin break-450 {
  @media (max-width: 450px) {
    @content;
  }
}